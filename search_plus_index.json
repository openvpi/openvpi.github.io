{"./":{"url":"./","title":"首页","keywords":"","body":"OpenVPI Homepage 简单易用、高度灵活、功能强大的歌声合成工程文件格式转换器已开启公测：B站专栏 面向未来的歌声合成工程文件转换器 在我们的理念中，所有人都应享有选择的权利和自由。因此，我们致力于为您带来第二次机会，使您的创作免受平台的制约与圈子的束缚。借助我们的转换器，您将能够在各类歌声合成平台的工程文件格式之间自由切换。 通过我们精心设计的应用程序，您只需指定输入与输出格式、批量导入文件、选择输出路径，即可开启转换任务。 基于 Material Design 构建的用户界面，简洁美观，响应流畅 用户指南    常见问题    下载中心    开源声明 通知/反馈/交流QQ群：687772360 插件架构，伸缩自如 OpenSVIP 是一个插件式的松耦合工程转换平台。每个插件均代表对一种文件格式的支持，它们由不同的开发人员独立进行开发与维护。您只需安装自己需要的插件即可进行转换工作。转换器本体与插件各自接收更新推送，按需取用，互不干扰。 从几乎所有现代主流的先进歌声合成引擎，到部分来自较早时代的传统合成引擎，乃至一些与音乐相关的通用文件，您都可以找到对应插件的支持。访问插件市场以浏览和挑选您所需的插件。 打通全平台是我们所坚持的目标；在追求生产力解放的道路上，我们不会抛弃任何一个用户群体。敬请您耐心等待，更多插件将会陆续上线。 众多格式可供选择 安装后的插件面板 所有数据，打包带走 你是否有很多工程文件放不下？做调校师要潇洒一点。喜欢某一家的技术，未必要用它的编辑器的。你喜欢一个引擎，未必一定要从头开始。 大至每一条轨道、每一句歌词、每一个音符，小至每一条参数、每一处呼吸、每一个音素，我们竭尽所能支持您迁移所有可触及的数据：它们是您的记忆、您的心血、您的财富。不论您意图携带自己的得意之作迁移至其他的引擎，还是希望继续在自己惯用的编辑器内完成工作，亦或是计划创作由隶属于不同引擎的歌手参与演绎的作品，OpenSVIP 都将助您找到归宿。 转换效果展示（从上到下依次为 X Studio、Synthesizer V Studio、ACE Studio、歌叽歌叽） 在 bilibili 上体验我们的转换效果 丰富选项，高度定制 在框架与插件的开发过程中，我们充分考虑了所有水平层次用户的需求，以及从无参、微参到全参等不同完成度的工程文件的转换场景。纯新手小白？熟练调校师？技术发烧友？所有人都可以找到适合自己的转换方案。 所有的高级选项均是由插件的开发者为每一种格式的导入与导出精心设计的，它们贴合每个引擎的特色与其用户的使用习惯，并力求在每一类使用场景下尽可能地简化转换完成后的二次手动加工流程。 高度定制化的转换选项 高度完整的数据转换支持与定制化的选项将赋予整个转换流程以无限可能。 OpenSVIP 能做些什么？一切由您想象。 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-07-15 17:31:45 "},"docs/guide.html":{"url":"docs/guide.html","title":"用户指南","keywords":"","body":"用户指南 1 快速开始 1.1 下载 前往下载中心，下载转换器本体与所需插件。每个插件都对应支持一种文件格式，您只需下载自己需要的插件；例如，若您需要在 X Studio 工程文件 与 Synthesizer V 工程文件 之间互相转换，则需要下载对应的两个插件。 注意：部分插件可能需要您阅读使用条款后才可下载。请跟随对应页面上的指引。 您将得到以下压缩包： 1.2 运行 将以 opensvip_converter 开头的转换器本体压缩包解压至您认为合适的路径。您将得到一个名为 OpenSVIP 的文件夹。进入这个文件夹，双击运行 OpenSvip.GUI.exe。 1.3 安装插件 在菜单栏上点击“转换>安装插件”。 在弹出的文件浏览对话框中选择以 opensvip_plugin 开头的插件压缩包（可以选择多个），并单击“打开”。 随后将依次弹出若干确认与提示对话框，请根据指引操作。 至此，转换器配置完成。后续安装新的插件或升级现有插件时，重复上述步骤即可。转换器本体的更新不会影响已安装的插件。 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-07-16 15:33:35 "},"docs/faq.html":{"url":"docs/faq.html","title":"常见问题","keywords":"","body":"常见问题 OpenSVIP 是什么？ OpenSVIP 是一个本地应用，能够在不同歌声合成软件的工程文件之间相互转换。同时，OpenSVIP 也是一个开放式、插件化的歌声合成工程文件处理平台，为开发者操作歌声合成所需的工程数据提供统一的接口。 OpenSVIP 的工作流程？ 所有的文件读写和转换工作都是由插件完成的，每个插件代表了对一种格式的支持。输入的工程文件由输入端插件进行读取并转换为 OpenSVIP 中介模型；随后输出端插件将中介模型转换并保存为目标工程文件格式。 支持转换哪些格式？ 目前我们已经支持了绝大部分主流现代化歌声合成引擎的工程文件格式，其中有一部分格式暂时是由我们独家支持的。除此以外，我们还支持一些与音乐相关的文件格式，例如 MIDI 文件与 LRC 歌词文件。 一些较旧、小众或难以读取的格式可能暂时没有得到我们的支持。但我们的目标是支持市面上绝大部分的格式，因此更多的插件将会在未来陆续推出，敬请期待。 UtaFormatix 是一个支持格式较为广泛的在线工程文件转换应用。如果您需要转换的格式尚未得到我们的支持，您可以首先使用该应用将工程文件转换到我们已支持的格式。 哪些数据能够/不能被转换？ 每个插件的开发者决定能够转换的数据的范围。一般情况下，一个开发完毕的插件会支持所有与歌声合成效果有关的、且能够读取和解析的数据，其中包括轨道、曲谱、歌词、参数等。在转换时，这些数据将与中介模型相互映射，并保持其含义不变（例如 Synthesizer V 的张力参数对应 X Studio 的力度参数）。受支持的数据清单通常会在插件市场的对应插件页面列出。除此以外，一些没有意义的冗余信息以及编辑器状态信息（例如界面缩放比例、轨道背景颜色）不会被转换，因为这些数据不会影响歌声合成效果。 一些插件可能处于早期的开发阶段，虽然对外提供下载试用，但可能暂时不会支持转换所有的数据。请留意插件更新。 相比于 UtaFormatix，OpenSVIP 有何特色？ OpenSVIP 是一个运行在本地的应用，转换时不依赖网络，目前仅支持 Windows 系统。转换器本体与插件均进行不定期的更新，并需要您下载安装。转换器与插件基于 C# .NET 构建，运行速度较快。 OpenSVIP 支持转换更完整的数据，例如伴奏信息、音素长度与气声、性别、张力等参数。 OpenSVIP 转换的数据更加精准，因为我们的转换理念基于合成效果与信息量，而非工程文件中的数据本身。例如，工程文件中所有影响音高变化的内容（颤音、弯音、音高偏差等）均会被提取，并通过精确的数学运算归并为实际的音高曲线。我们的目标有二：一是尽可能减少转换过程中的信息损失或增生；二是确保转换前后的合成效果一致或等价。因此在相当多的情况下，转换后的工程文件可以直接播放并导出，而不会存在较大的瑕疵和缺陷。 OpenSVIP 为每一种格式的导入与导出提供高级选项。这些高级选项由对应插件的开发者经过仔细考察与调研而设计，尽可能贴合对应引擎的特色与其用户群体的使用习惯。借助高级选项，您将可以根据自己的习惯控制转换过程。 不支持转换日语/英语/其他语种的工程吗？ 很抱歉，目前 OpenSVIP 的中介模型还是专为汉语歌曲工程设计的。我们支持转换其他语种填词的工程文件（通常不会报错），但转换完成后可能需要重新填词才能正常使用。未来我们会对整个项目进行重构升级，敬请期待。 为什么转换后的合成效果不尽人意？ 每个引擎对于不同的参数有不同的建模，每位歌手在相同参数下的演唱效果也各自不同。对于谱面信息、音高、音量等具有绝对定义的数据，我们会尽可能确保转换前后的数据一致；对于气声、性别、张力等参数，我们只能保证转换前后的数据信息相互等价。即便如此，转换后的参数也可以为您的手动修缮工作提供参考；这往往比重新编辑一个无参的工程更加省力。因此，我们选择将所有的数据都进行转换，而非忽略这些数据。 如果您确认转换前后的数据产生了不一致，请您联系插件的开发人员。他们的联系方式一般在插件详细信息面板的右上角。 转换后显示黄色的感叹号？ 这代表该工程在转换过程中遇到了非常规或未定义的行为，例如不支持的发音、错误的数据格式等。插件的开发人员捕获了这些异常情况，并尝试对其进行了修复或忽略，因此文件得以转换完成而没有报错。但是在这种情况下，输出的数据往往会与输入数据产生不一致。请点击黄色感叹号查看具体的说明。如仍有疑问，请通过插件详细信息面板右上角的联系方式联系插件开发人员。 转换失败/软件崩溃了！ 首先很抱歉给您带来了困扰。 若转换后提示转换失败，请通过以下步骤排查原因： 检查您输入的文件格式是否与“导入工程格式”下拉选项框中的设定相对应。如果格式不对应（往往体现在后缀名不相同），则您可能调用了错误的插件，这将导致转换失败。 确认该工程文件在转换前能够被其原本的引擎编辑器打开并播放。若原本的编辑器也无法打开和播放该工程文件，则代表该文件已损坏或包含错误的数据，这可能导致转换流程无法正确进行。 检查您选择的插件是否支持导入或导出文件。部分处于开发中的插件可能只支持了输入端或输出端；部分插件从设计之初就是只允许单向转换的（例如 LRC 歌词文件）。请点击红色“×”号查看错误信息并确认是否属于此种情况。 确保您已同时满足输入与输出插件的环境要求，具体的要求可以在插件详细信息面板中查看。部分插件可能对您的系统环境提出了特殊的要求，若不满足则无法正常运行。 检查转换器本体与插件更新。转换器本体的更新可使用菜单栏“关于>检查更新”获取，插件更新可在对应插件的详细信息面板中获取。将转换器与插件更新到最新版本后，请重复步骤 3 与步骤 4。 尝试控制变量。例如，将输出端切换为其他的格式并再次运行转换任务。若仍然出现转换失败，则可能是输入端插件的故障；若此时转换成功，则可能是输出端插件的故障。通过此种方式，我们在收到您的反馈后能够更高效地定位问题。 若您经过步骤 1-5 的检查后均无法定位问题，请在尝试步骤 6 后向对应插件的开发人员报告。开发人员可能会要求您提供工程文件的副本。 若转换器在使用过程中崩溃，请通过以下步骤排查原因： 检查您的系统是否安装了 .NET Framework 4.7.2 运行时。Windows 10 及更新版本的系统上通常自带了该组件；较旧版本的系统可能需要安装该组件后才可正常运行转换器。 请您再次尝试导致转换器崩溃的步骤（相同格式、相同文件、相同选项），观察是否再次导致转换器崩溃。 若您的电脑配置较低，或一次性转换了大量工程文件，请在菜单栏“设置”选项卡中取消勾选“启用多线程转换”，并再次尝试转换，观察转换器是否崩溃。 若步骤 2 和 3 无法解决问题且均导致转换器再次崩溃，请转到步骤 5。若崩溃问题没有再次出现，请暂时忽略并继续使用转换器一段时间。若相同的问题不定期但频繁出现，请转到步骤 5。 请检查您的插件是否损坏。通常情况下，重新安装一个插件可以起到修复的效果。 如果以上步骤均无法解决您的问题，请通过菜单栏“帮助>关于 OpenSVIP”中的联系方式向转换器开发人员反馈问题，并描述应用崩溃前经历的操作和自己的使用场景。开发人员会与你沟通并尝试解决问题；期间可能会向您提供测试版本以便排查故障。 转换后的工程文件版权归属于谁？ 由于工程转换技术的应用目前并不是十分广泛，所以歌声合成圈子似乎没有在这方面形成统一的标准。但可以确定的是，OpenSVIP 团队不会以任何形式宣称对转换得到的工程文件持有版权，也不会在文件中留下任何水印信息。您在对外发布工程文件或作品时，无需声明自己使用了 OpenSVIP 进行格式转换。相对应地，OpenSVIP 团队不对转换后的工程文件承担任何责任或作出任何承诺。 我们倡议：转换后的工程文件应被视为原始文件的一个副本，与您在自己的计算机上进行复制或克隆操作无异。当您分发转换后的工程文件或发布使用其制作的作品时，您应认识到这等同于对原始文件的分发或发布。例如，若原始文件的作者不允许二次投稿或商用，则转换后的文件同样不允许二次投稿或商用；若原始文件的作者对该文件保留版权，则由该文件转换得到的工程文件版权亦归属于原始文件的作者。 我在何处获取更新和提交反馈？ 在默认情况下，转换器的更新将在转换器启动时弹窗推送。通过菜单栏“帮助>检查更新”可以手动检查转换器的更新；在插件详细信息面板中可以获取插件更新。转换器与插件的最新版本与更新日期会在下载中心中列出，您可以自行检查并获取更新。 若需提交反馈，您可以： 在菜单栏“帮助>关于 OpenSVIP”找到转换器开发人员的联系方式； 通过插件详细信息面板右上角的联系方式向插件开发者提交反馈； 发送邮件至 openvpi@outlook.com 提交您的任何反馈、建议和想法。 除此以外，我们诚挚邀请您加入 OpenSVIP 团队的官方 QQ 群：687772360。转换器与插件的更新、新插件和新功能的上架均会在群内通过公告的方式进行通知；您还可以在群内直接联系开发人员，交流使用经验与体验，并反馈自己的想法。 我能否为 OpenSVIP 作出贡献？ 如果您是拥有编程技能的开发人员，我们非常欢迎您加入我们的开发团队。我们的团队由数名热爱开源的业余爱好者组成，并十分期待同好的加入。目前我们需要的工作主要是插件的开发。当然，如果您有其他的构想，也欢迎您向我们提出。 网站的标题是 OpenVPI，它与 OpenSVIP 是什么关系？ OpenSVIP 团队最初的成员原本都是 X Studio 的重度用户，整个项目事实上起源于一个对 X Studio 工程文件（SVIP 文件）的解析计划。当我们实现二进制 SVIP 文件与易读的 JSON 文件（也就是现在的 OpenSVIP Model）的相互转换后，我们意识到这个中介模型可以帮助我们完成更伟大的事情。当时我们对 X Studio 非常熟悉，同时 X Studio 工程文件的数据结构较为简单和直白，因此我们便着手将 OpenSVIP 逐步打造成了一个插件式的工程转换平台。而现在的 OpenSVIP 在架构上已经脱离了 X Studio 及其工程文件，可以完成其他格式的两两转换了。OpenSVIP 项目在今天的发展是一开始所没有设想到的，毕竟在项目之初，OpenSVIP 只是一个用于读写和操作 SVIP 文件的小项目而已（事实上 OpenSVIP 还有一个 Python 版本，但其发展程度停留在了最初的水平）。 项目的起源也为后续的发展留下了历史的包袱。X Studio 的数据格式设计并非处处完美，而 OpenSVIP 中介模型则沿袭了这些设计，给插件的开发带来了一些不便；X Studio 仅支持中文演唱，这给多语言工程的转换带来了困难；而随着 X Studio 的过气和没落，OpenSVIP 框架的扩展性也面临挑战。 因此，虽然 OpenSVIP 当前还处于活跃的维护期，但我们已经开始计划和设计下一代的框架，并命名为 OpenVPI。我们计划打造一个打通全平台的统一的歌声合成数据处理接口，让所有平台的用户能够以相同的标准和体验完成自己的创作，也让所有的歌声合成辅助工具开发者不再受到具体引擎和编辑器的限制。而实现一个工程格式转换项目，只是这个计划的第一步而已。 项目的未来发展方向和设想？ 我们目前距离自己的设想还有很长的路要走。我们依然会先完成对 OpenSVIP 的重构升级，使用 OpenVPI 覆盖现有的全部功能，并将所有的插件迁移至新的框架。在那以后，我们将能够方便地为用户带来更多实用的功能和玩法。 正如上所说，OpenVPI 将不仅仅是一个工程格式转换项目。我们计划率先完成的 OpenVPI Converter（可能叫这个名字）仅仅是 OpenVPI 工具链的其中一部分；我们最终的目标可能是实现一个类似于 SPSS Modeler 那样的流水线式工程文件处理引擎（OpenVPI Workflow），甚至是一个通用的、轻量级的工程文件查看和编辑器（OpenVPI Editor）。 在技术栈和运行平台方面，我们计划升级到最新的 .NET 框架，并构建跨平台（Windows、macOS、Linux）应用，甚至推出在线版网页应用。 我们在未来也会继续探索全新的创作和调音工作流。我们将站在不同于歌声合成引擎的直接开发团队的角度为所有的创作者服务，用技术成就自由。同时也很感谢屏幕前看到这段话的您，能够在项目发展的早期与我们相遇。 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-07-15 12:11:39 "},"docs/dev.html":{"url":"docs/dev.html","title":"开发文档","keywords":"","body":"开发文档 1 项目架构概述 OpenSVIP 是一个基于中介模型的插件式工程格式转换框架。 所有的工程文件经过文件读取或反序列化得到该种格式（源格式）在内存中的数据结构，再将这种数据结构转换和对应到一个统一的数据结构（称为中介模型），这就完成了工程文件的导入步骤。随后，中介模型被转换和对应到另外一种格式（目标格式）的数据结构，再经过文件写入或序列化存储至磁盘上，这就完成了工程文件的导出步骤。 工程文件的导入与导出（包括其中的转换）工作由插件完成。插件存储在特定的目录上，前端程序运行时扫描插件安装目录，并根据配置文件提取出每个插件的信息，得到一个插件列表，并反映在图形界面上供用户选择。转换任务运行时，框架使用反射调用的方式构造转换器的实例并执行对应的接口方法，完成导入与导出工作。因此，框架本身与各个插件是松耦合的状态，框架并不依赖插件运行。 项目结构大致如下： OpenSvip.Model：中介模型 OpenSvip.Framework：框架主要组件 OpenSvip.Library：框架标准库 OpenSvip.Console：基于命令行运行的开发者工具 OpenSvip.GUI：具有图形界面的桌面应用 OpenSvip.Tests：用于执行单元测试 Plugin.*：各种格式的转换插件 2 中介模型 当前版本的中介模型是基于 X Studio 工程文件（SVIP 文件）格式的（原因可以参考 FAQ 文档中的对应说明），这也是项目名称 OpenSVIP 的来源。X Studio 的工程文件在设计上有许多缺陷，可能会给插件开发造成困扰，因此目前框架提供了一些统一附加接口来进行部分数据的转换。 请您阅读中介模型描述文档。若您参与框架或插件的开发，请与开发团队的其余成员保持联系。 中介模型本身也可以被导出为磁盘上的文件（本质上是 JSON 序列化）。请您在下载中心中下载标识符为 json 的插件，它可以辅助您完成框架组件或插件的开发和调试。 3 框架主要组件 3.1 核心转换接口 IProjectConverter 是整个转换框架的核心接口。该接口包括两个方法： Load()：从磁盘中读取源格式的工程文件，并将其转换为 OpenSVIP 中介模型。 Save()：将 OpenSVIP 中介模型转换为目标格式，并将其写入磁盘。 每个插件中均应包括一个该接口的实现类，以供框架进行反射构造实例和调用方法。 3.2 转换选项 ConverterOptions 类用于存储用户指定的转换选项。每个转换选项都拥有一个独一无二的键（由插件开发者指定）；当用户输入选项后，由插件调用此类提供的方法，将选项值取出并转换为需要的数据类型。 3.3 警告信息 Warnings 静态类提供数个静态方法处理转换过程中产生的警告信息： AddWarning()：通常由插件调用。添加一条警告信息。 GetWarnings()：通常由框架调用。取出所有的警告信息。 ClearWarnings()：通常由框架调用。清除所有的警告信息。 3.4 插件管理器 PluginManager 用于读取、识别和管理插件。此类仅框架调用插件时使用，插件开发者无需关注。 3.5 任务沙箱容器 TaskContainer 类用于将不同的转换任务隔离在各自的应用程序域（AppDomain）中，以方便在转换完成后卸载并释放被占用的 DLL 文件。此类是插件热更新的重要依托。此类仅由 GUI 程序使用，插件开发者无需关注。 4 框架标准库 4.1 时间轴处理 TimeSynchronizer 类用于实现时间轴的重设和转换。其主要功能包括：将任意变速音乐的时间轴重设为单速时间轴并保持对齐；在谱面上的梯和秒两种时间计量单位之间互相转换。具体使用方法请参考代码中的注释。 4.2 谱记号处理 ScoreMarkUtils 静态类用于处理谱记号列表。谱记号包括拍号和曲速，该类提供数个静态方法以帮助实现谱记号列表的截断。具体使用方法请参考代码中的注释。 4.3 歌词拼音转换 PinyinUtils 静态类中的 GetPinyinSeries() 静态方法用于将汉字序列转换为拼音序列。该方法输入汉字序列，输出对应的拼音序列，在实现词汇级别（而非逐字转换）的转换精确度的同时保持每个元素对齐。具体使用方法请参考代码中的注释。 4.4 参数曲线处理 ParamCurveUtils 静态类提供参数曲线处理的统一接口。 4.4.1 降低参数点采样率 ReduceSampleRate() 扩展方法用于降低参数曲线的采样率，即根据传入的采样间隔对整条参数曲线进行重新采样，合并邻近的参数点并使用平均值替代，从而降低参数点密度。具体使用方法请参考代码中的注释。 4.4.2 切分参数曲线 SplitIntoSegments() 扩展方法用于将一条参数曲线根据间断点切分为若干分段。该方法用于将原始中介模型中的参数曲线转换为一种易于遍历的形式。具体使用方法请参考代码中的注释。 4.5 范围区间工具类 Range 抽象类提供若干范围区间运算的方法。此类包含若干运算符重载和基本的并、交、差、补、扩展、收缩、平移等区间集合运算，可以方便地操作一维整形区间，通常可用于时间轴范围的判定。 Range 类包含三个子类，可以在实例化时使用： EmptyRange：空区间（单例模式） SingleRange：单段区间 CompoundRange：多段区间 5 插件开发流程 本节将以使用 Visual Studio 2022 为例，引导您完成一个插件的开发工作。 5.1 新建工程 在项目仓库的 /csharp/Plugins 路径下添加一个 类库(.NET Framework) 项目，目标框架设置为 .NET Framework 4.7.2。假设您需要开发一个用于转换后缀为 .abc 的文件格式的插件，则您应将项目名称设置为 Plugin.Abc，目录名称设置为 Abc。 5.2 添加引用 右键“引用”，选择“添加引用”，在“项目-解决方案”选项卡中勾选以下的三个项目（其中标准库组件为非必选）： 5.3 创建描述文件 在您的项目的根目录下新建一个名为 Properties.xml 的文件，右键该文件，单击“属性”，将该文件设置为“始终复制”或“较新时复制”。 在文件中粘贴以下模板内容： example 0.0.1 example https://example.com none 无 1.3.0 --> 无 Example 文件 example example Example\\Plugin.Example.dll Example.Stream.ExampleConverter 根据您的设计填写该文件。其中，各个子标签的含义如下： Name 插件的名称。可以凸显插件的功能或特色，例如“ACE Stdio”包含“ACE Studio”与“标准输入/出”的双重含义。 Version 插件的三位版本号（X.Y.Z），建议遵循语义化版本管理原则。此标签用于比较版本新旧与接收更新推送。 Author 插件作者（您）的称谓。 HomePage 您的社交平台主页、邮箱地址（以“mailto:”开头）或其他带有您的联系方式的链接。此标签用于向用户提供反馈渠道。 UpdateUri 插件的更新日志获取地址。此标签用于向用户推送插件更新，默认值为 https://openvpi.github.io/market/plugin-.toml（ 为您插件的标识符）。若您的插件仅计划通过手动下载的方式向用户提供更新，请填入 none。 Description 插件的功能和使用注意事项等描述信息。 TargetFramework 这是一个可选标签。插件正确运行所需的最低框架版本。当您开始开发插件时，建议您将此标签值设定为当时框架的最新版本。在后续开发中，若框架进行了更新，而您使用了更新版本框架中提供的接口，则您需要随之修改此标签值。通常情况下，框架在新增接口时都会通知您留意此标签的值。 Requirements 除框架版本外，正常运行此插件需要用户手动满足的条件。例如必须安装某些运行环境或安装特定的软件。通常情况下不需要设置此标签。 Format 插件所支持转换的格式。此标签的值是用于向用户展示的，例如“X Studio 工程文件”。 Suffix 插件所支持转换的格式后缀名（不包含“.”号）。此标签值用于向用户展示以及自动识别导入格式。 Identifier 插件的标识符。这是唯一标识一个插件的字段，插件的更新与检索均依赖于此标签值，因此请不要与其他插件重复。建议设置为后缀名或格式名，例如“svp”或“midi”。 LibraryPath 包含插件业务逻辑主入口（即 IProjectConverter 的实现类）的动态链接库文件路径。路径包含两个部分：您插件的独立文件夹名称与动态链接库（DLL）文件名称。例如 Example\\Plugin.Example.dll。 Converter 您插件中 IProjectConverter 的实现类的类名。应包含完整的命名空间，例如 Example.Stream.ExampleConverter。此类必须位于由 LibraryPath 指定的动态链接库中。 InputOptions 插件对外提供的导入转换选项，即将源格式文件导入并转换为中介模型时的高级选项。这是一个集合类标签，可以包含多个选项。选项元素的模板如下（以布尔类型选项为例）： Example Example --> --> 其中各属性与子标签含义如下： Name 选项的名称标识符，应保持唯一，即不允许出现两个相同名称的输入（或输出）选项。此属性不会展示给用户。 Type 选项的数据类型。共允许 5 种数据类型： string：字符串类型 integer：整数类型 double：双精度浮点数类型 boolean：布尔类型 enum：枚举类型 Default 此选项的默认值。处于易用性的考量，不允许缺少默认值。不同数据类型的默认值规则如下： 字符串：可以是任意文本 整数类型：必须是能够被 int.Parse() 方法解析的整数 双精度浮点数类型：必须是能够被 double.Parse() 方法解析的整数 布尔类型：必须是 true 或 false 枚举类型：必须是其中一个枚举变量名（忽略大小写） 除此以外，支持使用 DescriptionAttribute 指定枚举变量的别名，将代替枚举变量名进行匹配。使用范例如下： public enum Language { [Description(\"CHN\")] Chinese, [Description(\"ENG\")] English, Japanese } 此时 \"CHN\", \"chn\" 将被解析为 Language.Chinese，\"ENG\", \"Eng\" 将被解析为 Language.English，\"Japanese\", \"japanese\" 将被解析为 Language.Japanese；\"Chinese\", \"english\", \"JPN\" 等输入将解析失败。 Notes 用于展示给用户的选项标签，例如“默认歌手名称”。 Tips 这是一个可选标签。用于向用户提示此选项的效果、用法与注意事项。 EnumChoices 仅在 Type 属性设置为 enum 时有效，代表可用的枚举变量值。这是一个集合类标签，可以包含多个值。枚举值元素的模板如下： Example --> 其中各属性与子标签含义如下： Name 向用户展示的枚举值（例如显示在下拉列表框中）。 Tag 该枚举值的唯一标签，不得与其他枚举值重复。规则同 Option 标签的 Default 属性。 Label 这是一个可选标签。用于向用户提示此枚举值的含义或注意事项。 OutputOptions 插件对外提供的导出转换选项，即将中介模型转换并存储为目标文件格式时的高级选项。设置规则同 InputOptions 标签。 5.4 编写业务逻辑 您需要创建 IProjectConverter 接口的实现类，并实现接口中的两个方法。您的实现类必须拥有一个无参的构造方法（通常可以使用默认构造方法）。示例代码如下： // 省略若干 using using OpenSvip.Framework; using OpenSvip.Model; namespace Example.Stream { public class ExampleConverter : IProjectConverter { public Project Load(string path, ConverterOptions options) { // 您的文件导入业务逻辑，包括文件读取与格式转换 throw new NotImplementedExeption(\"尚未实现或不支持导入功能\"); } public void Save(string path, Project project, ConverterOptions options) { // 您的文件导出业务逻辑，包括格式转换与文件写入 throw new NotImplementedException(\"尚未实现或不支持导出功能\"); } } } 编写业务逻辑时，请您注意设计代码层次结构，并适当添加注释，以方便自己或其他开发人员进行后续扩展与维护。 5.5 测试 5.5.1 在原工程内进行测试 您可以在原工程内添加用于测试的代码，对您的插件进行测试。 右键您的项目，点击“属性”，将“输出类型”改为“控制台应用程序”。 新建 Test.cs 文件和其中的 Test 类，添加 Main() 方法并编写您的测试代码。 // 省略若干 using namespace Example.Tests { public static class Test { public static void Main() { // 您的测试逻辑 } } } 建议将输入与输出端分别测试，即分别测试中介模型转到您的格式即您的格式转到中介格式。可以将中介模型通过 JSON 序列化的方式保存到磁盘上。Newtonsoft.Json 是框架本身依赖的第三方 JSON 解析库，请使用它进行 JSON 序列化和反序列化。请参考如下代码： public static Project ReadJson(string path) { Project project; using (Stream stream = new FileStream(path, FileMode.Open, FileAccess.Read)) using (Reader reader = new StreamReader(stream, Encoding.UTF8)) { project = JsonConvert.DeserializeObject(reader.ReadToEnd()); } return project; } public static void WriteJson(string path, Project project) { using (Stream stream = new FileStream(path, FileMode.Create, FileAccess.Write)) using (Writer writer = new StreamWriter(stream, Encoding.UTF8)) { writer.Write(JsonConvert.SerializeObject(project)) } } 测试逻辑编写完成后即可进行测试。请注意：在正式发布前，请您将项目属性中的“输出类型”改回“类库”。同时，建议设置条件编译以在 Release 模式下忽略测试文件。 右键您的项目，点击“卸载项目”。 再次右键项目，点击“编辑项目文件”。在随后打开的 .csproj 文件中找到 Test.cs 对应的子标签，添加 Condition 属性： 再次右键项目，点击“重新加载项目”。 正式发布时请切换至 Release 模式进行生成，此时编译器将忽略 Test.cs 文件。 5.5.2 使用项目提供的单元测试 单元测试是一种推荐使用的测试方式。您可以在 OpenSvip.Tests 项目中引用您自己的插件项目和其他的插件项目，并编写类似框架调用的代码进行测试。同时，您还可以单独对您代码中的关键部分进行测试。 在 OpenSvip.Tests 项目中添加您的单元测试文件，例如 ExampleTests.cs。编写以下代码： // 省略若干 using using NUnit.Framework; using OpenSvip.Framework; using Example.Stream; // 您的插件的命名空间 namespace OpenSvip.Tests { [TestFixture] public class ExampleTests { [Test] public void TestExample01() { // 您的 01 号测试点 } [Test] public void TestExample02() { // 您的 02 号测试点 } // ... 其他若干测试点 } } 在单元测试中，您还可以像框架调用插件那样调用自己编写的插件或其他插件： public static void TestImport(string path) { new ExampleConverter().Load( path, new ConverterOptions( new Dictionary() ) ); } public static void TestExport(string path, Project project) { new ExampleConverter().Save( path, project, new ConverterOptions( new Dictionary() ) ); } 如果要测试您设计的高级选项，可以在实例化 ConverterOptions 类时传入，例如： new ConverterOptions( new Dictionary( {\"name1\", \"value1\"}, {\"name2\", \"value2\"}, // ... ) ) 5.6 生成和打包 将解决方案配置切换至 Release 和 Any CPU。 右键项目，点击“生成”。等待编译完成后，再次右键项目，点击“在文件资源管理器中打开文件夹”，并进入 bin/Release/ 目录。 在该目录下新建一个文件夹，这将是您的插件的独立文件夹，命名请参照 Properties.xml 中 LibraryPath 子标签的配置。 将您的插件所需的文件复制到新建的文件夹内。为了减小插件体积，下列隶属于框架本身的文件无需复制： OpenSvip.Model.dll OpenSvip.Model.dll.config OpenSvip.Framework.dll OpenSvip.Library.dll Newtonsoft.Json.dll Newtonsoft.Json.xml ToolGood.Words.Pinyin.dll 除此以外，您也不需要复制后缀名为 .pdb 的 Debug 文件。 复制完成后，将该文件夹压缩为 .zip 压缩文件格式。建议命名为 opensvip_plugin__.zip，其中 是您的插件名称或标识符， 是您插件的三位版本号。 使用转换器菜单栏的“转换>安装插件”功能安装此插件压缩包，如果安装成功、能被正确识别且转换功能不报错，即代表插件打包完成。可以直接发布该压缩包供用户安装。 5.7 在线发布与推送更新 OpenSVIP 对外提供统一的插件发布途径，这包括： 在本站插件市场发布插件说明文档、更新日志，并在下载中心提供下载链接 使用腾讯云对象存储对外提供插件压缩包下载服务 本站的 GitHub 仓库地址为 https://github.com/openvpi/openvpi.github.io。 5.7.1 在插件市场中添加您的插件 在 /market/ 目录下新建 plugin-.md，在其中编写您的插件文档和更新日志。 如何编写 Markdown文件？Markdown 教程 在 /SUMMARY.md 文件中添加上一步创建的 Markdown 文件的超链接。 5.7.2 在下载中心中添加您的插件 在 /downloads.md 中的插件表格中添加一行，写入您的插件信息和下载链接。 5.7.3 将您的插件压缩包上传至存储桶 请联系项目管理员。如您有自己的下载渠道，可以无视此步骤。 5.7.4 编写版本更新信息 在 /market/ 目录下新建 plugin-.toml，并写入以下模板： Version = \"0.0.1\" RequiredFrameworkVersion = \"1.0.0\" Date = \"1926-08-17\" Prologue = \"\" Items = [ ] Epilogue = \"\" DownloadLink = \"https://example.com/example.zip\" 如何编写 TOML 文件？TOML 教程 其中各字段含义如下： Version 字符串类型。插件的三位版本号。 RequiredFrameworkVersion 字符串类型。对应 Properties.xml 中的 TargetFramework 子标签。 Date 字符串类型。更新发布的日期，yyyy-MM-dd 格式。 Prologue 字符串类型。显示在开头的文本。可以为空。 Items 字符串数组类型。通常在此列举更新内容。 Epilogue 显示在最后的文本。可以为空。 DownloadLink 此版本插件的下载链接。 5.7.5 正式发布与推送更新 将您的更改推送至本站的 GitHub 仓库，或提交 Pull Request。 您的改动合并至主分支后，将由 GitHub Actions 自动构建并托管至 GitHub Pages。流程结束后，您和用户均可以在本站看到发布与推送的结果。 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-07-16 17:49:20 "},"updatelogs/summary.html":{"url":"updatelogs/summary.html","title":"更新日志","keywords":"","body":"更新日志 v1.4.1 (2022.07.14) 更换了官网网址 v1.4.0 (2022.06.27) 此版本引入了插件检查更新与一键升级机制。若要更新某个已安装的插件，请遵循以下步骤： 在“导入工程格式”或“导出工程格式”下拉选项框中选择对应的插件； 点击右侧“查看详细信息”按钮，打开详细信息面板； 若检测到该插件更新，在“版本号”右侧会出现“获取更新”按钮； 单击“获取更新”，在随后弹出的更新日志对话框中点击“更新”； 此时新版本插件会在后台进行下载，随后将提示进行安装，根据指引完成即可。 部分插件可能需要先将转换器升级至较新的版本才会推送更新。若您怀疑网络原因导致无法正常获取更新，请尝试多次切换导入/导出插件，或使用菜单栏“关于-检查更新”测试能否正常连通更新服务。若无法连通，请通过版本仓库手动下载更新。 v1.3.0 (2022.06.21) 支持多线程加速转换，充分利用性能（可以在“设置”菜单栏中关闭） 为所有的插件引入了统一高效的汉字转拼音接口，各插件适配更新后可提高拼音转换的准确度并修复一些错误 v1.2.3 (2022.06.09) 此版本包含插件兼容性改进和错误修复，建议所有用户更新。 新增插件兼容性检查，试图安装不兼容当前版本的插件时会提示更新应用 延长了高级选项 Tips 的停留时间，阅读更友好 框架依赖更新：修复了 SynthV 插件导入音高时出错的 bug v1.2.2 (2022.05.25) 此版本包含重要的错误修复，建议所有用户更新。 优化插件信息排版和其他一些 UI 细节逻辑 添加新用户引导功能，在首次进入时引导用户下载并安装插件，同时禁用大部分菜单项以防止误操作 修复了转换任务运行时点击强制退出应用却不起效果的 bug 【框架依赖更新】修复了部分插件参数曲线编辑范围计算的 bug 【框架依赖更新】修复了少数情况下 SynthV 插件需要极长的时间才能解析一个工程文件的 bug SynthV 插件更新提醒：通过重写音高转变解析算法，大幅提升了音高曲线的输入精准度。请使用此插件的用户通过菜单栏“转换-插件市场”下载插件更新。 v1.2.1 (2022.05.11) 支持插件热更新：安装后可直接使用，无需重启应用 尝试修复部分情况下后台残留进程无法正常退出的 bug 应用内的部分跳转链接更新以及一些 UI 小优化 MIDI 插件更新提醒[1]：新增“将半元音音符向前偏移”选项，以应对某些引擎[2]的元音拖拍问题 [1] 由于当前未实现插件检查更新，故将插件更新信息并入应用本体更新提示日志。此项仅为提醒，请根据需要另行安装。 [2] 特指某内测中的 PC 端破自行车。 v1.2.0 (2022.05.06) 新增了启动时检查更新的选项，默认为开启 当插件文件夹冲突时，提供强制覆盖安装的选项（而非报错并拒绝安装） 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-07-14 00:28:02 "},"market/summary.html":{"url":"market/summary.html","title":"插件市场","keywords":"","body":"插件市场 这里会介绍和展示目前所支持的所有插件（文件格式）的相关信息，包括但不限于功能说明、使用指南、更新日志。若需下载某个插件，请前往下载中心。 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-07-16 21:20:12 "},"market/plugin-svip.html":{"url":"market/plugin-svip.html","title":"X Studio 工程文件","keywords":"","body":"BinSvip 适用格式：X Studio 工程文件 (*.svip) 版本：1.1.6 最后更新日期：2022.05.30 作者：YQ之神 简介 由于 OpenSVIP 框架的中介模型目前主要是基于 svip 工程文件的数据格式的，因此本插件可以实现几乎无损的完整数据转换。由于输入或输出平台的不同，部分数据可能无法与源平台或目标平台一一对应。 [!WARNING] 请注意，此插件依赖 X Studio 的部分组件，但为避免法律纠纷，我们无法将该部分被依赖的组件一同打包。因此，需要在本机安装至少 1.8 版本的 X Studio · 歌手软件才可正常使用此插件；若需要转换力度参数，则需要 2.0 版本。同时，还需要将软件设置为 .svip 文件的默认打开方式（通常由安装程序自动完成）。如果仍无法使用，请检查注册表项 HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\svipfile\\shell\\open\\command 是否为 X Studio 主程序路径。 数据支持清单 读取 X Studio 工程文件 数据内容 支持等级 说明 轨道 ✓ 曲谱 ✓ 歌词 ✓ 唱法标记 ✓ 颤音 × 由于在 X Studio 中添加的颤音会被立即写入音高参数，因此无需支持读取。 音高参数 ✓ 音素参数 ✓ 音量参数 ✓ 气声参数 ✓ 性别参数 ✓ 力度参数 ○ 需要安装 X Studio 2.0 及以上版本才支持读取。 写入 X Studio 工程文件 数据内容 支持等级 说明 轨道 ✓ 曲谱 ✓ 歌词 ○ 原则上仅支持中文歌词导入。源格式中的歌词包含字母（通常为汉语拼音或罗马音）时将以“修改发音”转换。可能因此产生不在 X Studio 发音表内的音节，从而导致无法直接播放。 唱法标记 ✓ 颤音 × 由于 X Studio 仅根据音高参数进行合成，因此不支持单独写入颤音。 音高参数 ✓ 源格式中任何对音高曲线产生影响的数据（例如“音高偏差”“颤音”）将被映射至音高参数。 音素参数 ✓ 源格式中任何对音素长短产生影响的数据（例如“辅音长度”）将被映射至音素参数。 音量参数 ✓ 源格式中的音量包络将被映射至音量参数。 气声参数 ✓ 源格式中对气息强度产生影响的数据将被映射至气声参数。 性别参数 ✓ 源格式中对共振峰产生影响的数据将被映射至性别参数。 力度参数 ○ 需要安装 X Studio 2.0 及以上版本才支持写入。源格式中任何对演唱力度产生影响的数据（例如“张力”“力度”）将被映射至力度参数。 高级选项 输入选项 此插件暂无输入选项。 输出选项 缺省歌手 可以指定输出工程文件中的歌手。必须输入完整无误的歌手名字。若此选项指定的歌手不存在，将使用 X Studio 中设置的默认歌手。如果要指定歌手编号与名称的转换关系，或添加已拥有编号但未公开发行的歌手，请修改插件目录下的 SingerDict.json。 缺省曲速 X Studio 支持的曲速范围为 20 ~ 300。曲速超出范围时，将会启用绝对时间轴以确保音符对齐。请尽量将此值设置为源工程文件中曲速的整数倍或整数分之一；只要在合理数值范围内，此选项的值不会影响对齐效果。 输出文件版本 此选项仅控制输出工程文件的头部版本信息。选择较旧的工程文件版本不会造成数据丢失。 此选项支持的值如下： 自动选择：使用系统上安装的 X Studio 所对应的工程文件版本 SVIP 7.0.0：使用 X Studio 2.0 对应的工程文件版本 SVIP 6.0.0：使用兼容 X Studio 1.8 的工程文件版本 最大只读兼容：使用兼容任意版本 X Studio 的工程文件版本 [!NOTE] 各版本的 X Studio 均有一个对应的工程文件版本号。例如，X Studio 1.8（最高支持 SVIP6.0.0）无法打开由 X Studio 2.0（对应 SVIP7.0.0）保存的工程文件。将头部信息设置为较低版本可以增强兼容性，例如使 X Studio 1.8 能够打开包含力度参数的工程文件（尽管不会在编辑器中显示）。 注意：能够打开并不意味着能够无损保存。例如，使用 X Studio 1.8 编辑并保存包含力度参数的工程文件，会导致力度参数永久丢失，即使再次使用 X Studio 2.0 打开也无法恢复。若选择保存为“最大只读兼容”，将导致音量、气声、性别、力度参数无法被 X Studio 识别（数据没有丢失）。为了避免无法挽回的数据丢失，强烈建议不要使用 X Studio 修改和保存使用此选项导出的工程文件。若要重新将工程文件恢复至可安全编辑的状态，请选择保存为 SVIP 6.0.0 及以上版本。 更新日志 v1.1.6 (2022.05.30) 修复了一个导致所有人都转换失败的愚蠢 bug 在此为没有做好测试工作向所有受影响的用户表示由衷的歉意。 v1.1.5 (2022.05.26) 针对“最大兼容性”选项可能导致的数据丢失风险，添加警告信息 “最大兼容性”选项改名为“最大只读兼容” 更新后使用本插件重新输出为 SVIP 6.0.0 及以上版本，可以从“最大兼容性”工程文件中恢复无法被 X Studio 识别的参数 v1.1.4 (2022.05.23) 修复了未安装 X Studio 时未能正确显示错误信息的 bug v1.1.3 (2022.05.21) 新增“最大兼容性”选项，支持导出兼容任意版本 X Studio 的工程文件 v1.1.2 (2022.05.06) 随转换器公测发布 开源声明 本插件使用和参考了以下第三方开源项目： 开源项目 许可证 相关链接 Newtonsoft.Json MIT License https://www.newtonsoft.com/json 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-07-22 13:26:13 "},"market/plugin-svp.html":{"url":"market/plugin-svp.html","title":"Synthesizer V 工程文件","keywords":"","body":"SynthV 适用格式：Synthesizer V 工程文件 (*.svp) 版本：1.8.4 最后更新日期：2022.07.25 作者：YQ之神 更新日志 v1.8.4 (2022.07.25) 修复了部分 svp 工程存在数值为 0 的参数点导致反序列化时数据格式转换失败的 bug v1.8.3 (2022.06.21) 修复了部分 svp 工程存在负坐标音符导致转换失败的 bug v1.8.2 (2022.05.24) 修复了音高输入平滑模式下未经编辑的音高区域被意外导入的 bug v1.8.1 (2022.05.22) 当参数点采样间隔过高时改用立方插值，保持曲线平滑 v1.8.0 (2022.05.21) 重写音高转变解析算法，大幅提升音高曲线输入精准度 v1.7.0 (2022.05.06) 随转换器公测发布 开源声明 本插件使用和参考了以下第三方开源项目： 开源项目 许可证 相关链接 Newtonsoft.Json MIT License https://www.newtonsoft.com/json NAudio MIT License https://github.com/naudio/NAudio NPinyinPro 未知 https://www.nuget.org/packages/NPinyinPro 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-07-26 14:23:29 "},"market/plugin-gj.html":{"url":"market/plugin-gj.html","title":"歌叽歌叽工程文件","keywords":"","body":"歌叽歌叽工程转换插件 适用格式：歌叽歌叽工程文件 (*.gj) 版本：1.7.3 最后更新日期：2022.07.21 作者：笛鹿FlutyDeer 简介 本插件支持歌叽歌叽工程文件与其他格式互相转换。由于输入或输出平台的不同，部分数据可能无法与源平台或目标平台一一对应。 数据支持清单 读取歌叽歌叽工程文件 数据内容 支持等级 说明 轨道 ✓ 曲谱 ✓ 歌词 ✓ 唱法标记 ✓ 音高参数 ✓ 音素参数 ✓ 音量参数 ✓ 歌叽歌叽的轨道音量包络将作为音量参数导入。 写入歌叽歌叽工程文件 数据内容 支持等级 说明 轨道 ✓ 曲谱 ✓ 歌词 ○ 仅支持中文歌词导出。源格式中的歌词包含字母时将作为“修改拼音”转换。如果遇到歌叽歌叽不支持的发音，将忽略此项并产生警告。 唱法标记 ✓ 音高参数 ✓ 音素参数 ✓ 音量参数 ✓ 源格式中的音量参数将被映射至音量包络。 高级选项 输入选项 此插件暂无输入选项。 输出选项 歌词和拼音处理方式 此选项支持的值如下： 仅歌词：丢弃所有编辑过的拼音，仅保留中文歌词。 与源文件相同 仅拼音：所有歌词在转换成拼音后丢弃，歌词恢复为默认的“啊”。 歌词和拼音：保留中文歌词和已编辑的拼音，未编辑拼音的音符将标上拼音。 使用旧版的汉字转拼音方案 不推荐开启，且未来有可能会移除。 音量参数平均采样间隔 单位为梯。歌叽歌叽没有类似于音高参数的音量参数，只有轨道音量包络，本插件将音量参数映射到轨道音量包络。数值越大，编辑器越流畅；数值越小，音量参数越精确。 默认歌手 可以指定输出工程文件中的歌手。 此选项支持的值如下： 扇宝 SING-林嘉慧 Rocky 超越AI 更新日志 v1.7.3 (2022.07.21) 新增导入歌叽歌叽工程时移除歌词中的空白字符 v1.7.1 (2022.07.02) 输出选项的默认歌手新增“超越AI”的选项 v1.7.0 (2022.06.24) 注意：此版本需要框架版本为1.3.0及以上才能正常使用。请在 OpenSVIP 转换器顶部的菜单栏>帮助>关于 OpenSVIP 查看是否满足条件，如果不满足，请更新转换器 改用 OpenSVIP 框架的汉字转拼音方案，新增“使用旧版的汉字转拼音方案”的选项，以便在两种汉字转拼音方案之间切换 修复“仅拼音”下丢弃转音符号的错误 v1.6.2 (2022.05.30) 支持伴奏偏移转换 加强拼音数据校验，防止出现空格等符号导致无法识别 修复拍号转换错误的问题 v1.6.0 (2022.05.13) 新增歌词和拼音处理方式的选项：仅歌词、仅拼音、与源文件相同、歌词和拼音 默认歌手改用下拉菜单来选择 修复了一些bug v1.5.1 (2022.05.06) 随转换器公测发布 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-07-22 13:41:43 "},"market/plugin-midi.html":{"url":"market/plugin-midi.html","title":"MIDI 文件","keywords":"","body":"MIDI 转换插件 适用格式：MIDI 文件 (*.mid) 版本：0.8.2 最后更新日期：2022.08.03 作者：笛鹿FlutyDeer 简介 本插件支持标准 MIDI 文件，即 Standard MIDI Files (SMF) ，与其他格式互相转换。由于输入或输出平台的不同，部分数据可能无法与源平台或目标平台一一对应。 数据支持清单 读取 MIDI 文件 数据内容 支持等级 说明 轨道 ✓ 曲谱 ✓ 歌词 ✓ 实验性选项。如果歌词包含字母时将作为“修改发音”转换。 写入 MIDI 文件 数据内容 支持等级 说明 轨道 ✓ 曲谱 ✓ 歌词 ✓ 如果修改过源格式音符的发音，将会把修改后的发音作为歌词导出。 高级选项 输入选项 导入歌词 启用此选项，将会尝试导入 MIDI 文件中的歌词。 歌词文本编码 指定导入歌词时所用的文本编码。除非歌词出现乱码，否则不应更改此设置。 此选项支持的值如下： ASCII BigEndianUnicode Default Unicode UTF-32 UTF-7 UTF-8 BOM UTF-8 导入拍号 指定是否导入拍号。关闭此选项，拍号设置为4/4。 通道处理方式 对于一条轨道内有多个不同通道音符的情况，可以指定不同的处理方式。 此选项支持的值如下： 仅导入首条通道 全部拆分为轨道 自定义导入范围 通道 指定要导入哪些通道上的音符。请输入通道的序号和/或通道范围（用英文逗号分隔），例如1,3,5-12。取值范围：1-16。仅在“通道处理方式”选项中选择“自定义导入范围”时有效。 导入有错误或损坏的 MIDI 文件时 指定如何处理含有错误或损坏的 MIDI 文件。选择“忽略错误”，软件将会尝试导入有错误或损坏的 MIDI 文件，但不保证能正确导入。 此选项支持的值如下： 中止 忽略错误 输出选项 拖拍前移补偿量 非负整数，单位为梯。输入负数视为零。将发音为 y-、w-、a-、o- 和 e- 的音符提前，以缓解某些歌声合成软件半元音或元音音符出现迟滞的问题。推荐值：30~60。 导出歌词 指定是否导出带词 MIDI 文件。 移除歌词中的常见标点符号 移除中英文的逗号、句号、问号和感叹号，防止不支持含标点符号歌词的歌声合成软件无法正常合成。 歌词兼容性模式 将所有中文歌词转换为拼音，防止不支持导入带有中文歌词 MIDI 文件的歌声合成软件出现乱码。 使用旧版的汉字转拼音方案 不推荐开启，且未来有可能会移除。 歌词文本编码 除非打开歌词兼容性模式后仍然乱码，否则不应更改此设置。 此选项支持的值如下： ASCII BigEndianUnicode Default Unicode UTF-32 UTF-7 UTF-8 BOM UTF-8 移调 单位为半音。若要降低一个八度，则输入“-12”。对于移调后超出 MIDI 音高范围的音符，将会被限制在边缘。 PPQ 即 parts per quarter, 又名 ticks per quarter note，每四分音符的脉冲数。除非你知道这是什么，否则不应更改此设置。 [!NOTE] 在 MIDI 中，时间是用梯（ticks）而不是秒或者其他单位表示的。MIDI 系统是由 MIDI 时钟驱动的，时钟能产生脉冲。一个脉冲到来，梯的值就增加一。时钟产生脉冲的频率是根据曲速来定的，这里不展开来讲。时基（time division）是指每四分音符的脉冲数（ticks per quarter note），描述的是 MIDI 系统的时间分辨率。如果时基设置为480，那么演奏一个四分音符的时间就是480梯。换句话说，当 MIDI 系统数够了480个脉冲，则表示经过了一个四分音符的时间。数值越大，MIDI 系统的时间分辨率就越高，也就是说可以演奏时值越小的音符。如果要将 MIDI 文件的播放速度提高两倍，可以将默认的时基（480）除以2，即改成240。 更新日志 v0.8.2(2022.08.03) 修复特定情况下导入歌词和曲速错位的问题。 v0.8.1(2022.07.29) 导入出现错误时引导用户选择忽略错误。 v0.8.0(2022.07.17) 注意：此版本需要框架版本为1.3.0及以上才能正常使用。请在 OpenSVIP 转换器顶部的菜单栏>帮助>关于 OpenSVIP 查看是否满足条件，如果不满足，请更新转换器。 新增导入 MIDI 时重复音符的检测。 改用 OpenSVIP 框架的汉字转拼音方案，转换更加准确。同时新增“使用旧版的汉字转拼音方案”的选项，以便在两种汉字转拼音方案之间切换。 导入歌词不再作为实验性选项。 v0.7.1(2022.07.11) 修复特定情况下曲速转换错误的问题。 v0.7.0(2022.06.19) 新增多通道导入选项。对于一条轨道内有多个不同通道音符的情况，可以选择仅导入首条通道、全部拆分为轨道和自定义导入范围。 半元音前移量的选项升级为拖拍前移补偿量，生效范围扩展到y-、w-、a-、o- 和 e-。 调整了部分文案。 v0.6.0 (2022.05.30) 新增是否导入拍号和导出歌词的选项。 新增轨道名称的导入和导出。 修复特定情况下曲速无法导入的问题。 v0.5.0 (2022.05.27) 新增读取 MIDI 文件遇到错误处理选项，即使是损坏或包含错误的 MIDI 文件，也能尝试转换。 新增是否导入歌词选项。由于导入歌词尚处于实验阶段，如果出现问题，可以关闭此选项并向开发者反馈。 修复 PPQ 不为480时音符位置和时长错误的问题。 修复导入不带词 MIDI 文件时音符错位的问题。 v0.4.1 (2022.05.25) 支持带词 MIDI 文件反向转换成其他格式（可能还有不少bug，欢迎大家反馈）。 修复了半元音前移的一个小bug。 v0.3.2 (2022.05.18) 修改文案和半元音前移量的推荐值。 v0.2.2 (2022.05.06) 随转换器公测发布 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-08-03 21:01:29 "},"market/plugin-vog.html":{"url":"market/plugin-vog.html","title":"Project Vogen 工程文件","keywords":"","body":"Vogen 工程转换插件 适用格式：Project Vogen 工程文件 (*.vog) 版本：0.4.0 最后更新日期：2022.06.19 作者：笛鹿FlutyDeer 简介 本插件支持 Vogen 工程文件与其他格式互相转换。由于输入或输出平台的不同，部分数据可能无法与源平台或目标平台一一对应。 数据支持清单 读取 Vogen 工程文件 数据内容 支持等级 说明 乐句 ✓ Vogen 的乐句将作为轨道导入。 曲谱 ✓ 歌词 ✓ 写入 Vogen 工程文件 数据内容 支持等级 说明 轨道 ✓ 轨道将作为 Vogen 的乐句导出。 曲谱 ✓ 歌词 ✓ 高级选项 输入选项 此插件暂无输入选项。 输出选项 歌手 可以指定输出工程文件中的歌手。请输入完整无误的歌手英文名字。 更新日志 v0.4.0(2022.06.19) 支持指定歌手。 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-07-22 13:41:43 "},"market/plugin-y77.html":{"url":"market/plugin-y77.html","title":"元七七工程文件","keywords":"","body":"元七七工程转换插件 适用格式：元七七工程文件 (*.y77) 版本：1.0.0 最后更新日期：2022.05.13 作者：笛鹿FlutyDeer 简介 本插件支持元七七工程文件与其他格式互相转换。由于输入或输出平台的不同，部分数据可能无法与源平台或目标平台一一对应。 数据支持清单 读取元七七工程文件 数据内容 支持等级 说明 曲谱 ✓ 歌词 ✓ 音高参数 ✕ 暂不支持读取音高参数。 写入元七七工程文件 数据内容 支持等级 说明 轨道 ○ 仅导出首条轨道。 曲谱 ✓ 歌词 ✓ 音高参数 ✕ 暂不支持写入音高参数。 高级选项 输入选项 此插件暂无输入选项。 输出选项 此插件暂无输出选项。 更新日志 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-07-22 13:41:43 "},"market/plugin-json.html":{"url":"market/plugin-json.html","title":"OpenSVIP Model 文件","keywords":"","body":"JsonSvip 适用格式：OpenSVIP Model 文件 (*.json) 版本：1.0.0 最后更新日期：2022.04.22 作者：YQ之神 更新日志 v1.0.0 (2022.05.06) 随转换器公测发布 开源声明 本插件使用和参考了以下第三方开源项目： 开源项目 许可证 相关链接 Newtonsoft.Json MIT License https://www.newtonsoft.com/json 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-07-22 13:26:13 "},"market/plugin-lrc.html":{"url":"market/plugin-lrc.html","title":"LRC 歌词文件","keywords":"","body":"LRC 歌词转换插件 适用格式：LRC 歌词文件 (*.lrc) 版本：0.0.1 最后更新日期：2022.07.05 作者：笛鹿FlutyDeer 简介 本插件支持从其他格式导出 LRC 歌词文件，提供丰富的输出选项。本插件无法作为输入端，即无法将 LRC 歌词文件转换为其他格式。 高级选项 输出选项 歌手名 歌曲名 专辑名 歌词作者 偏移量 单位为毫秒，正值表示整体提前，负值相反。 偏移处理方式 此选项支持的值如下： 作用于时间轴：对每一行歌词的时间轴作偏移，元数据的“offset”保持为0。 作用于元数据：写入偏移量到元数据的“offset”，不处理歌词的时间轴。注意：由于部分播放器不支持元数据里的“offset”标签，选择此选项可能会导致歌词显示时间不准确。 歌词换行方式 此选项支持的值如下： 音符间隙和标点符号：两个相邻的音符间距大于等于32分音符或遇到标点符号时另起新行。 仅音符间隙：两个相邻的音符间距大于等于32分音符时另起新行。 仅标点符号：遇到标点符号时另起新行。 写入时间轴 如果需要无时间轴的歌词，关闭此选项即可。 歌词文本编码 此选项支持的值如下： ASCII BigEndianUnicode Default Unicode UTF-32 UTF-7 UTF-8 BOM UTF-8 更新日志 v0.0.1 (2022.07.05) 首次发布 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-07-05 22:48:18 "},"market/plugin-ace.html":{"url":"market/plugin-ace.html","title":"ACE Studio 工程文件","keywords":"","body":"AceStdio 适用格式：ACE Studio 工程文件 (*.acep) 版本：0.8.3 最后更新日期：2022.07.28 作者：YQ之神 公告 由于官方封杀，本插件暂停开发和对外提供更新推送（包括功能性与修复性更新），后续发展待定。若仍要使用此插件，请将 ACE Studio 回退至 1.0.3 及之前版本。 许可证与使用条款 本插件基于 GNU 通用公共许可证 v3.0（下称 GPL-3.0）开源。这意味着您不得将此插件的源码或二进制文件用于闭源商业软件开发；将源码或二进制文件二次分发（无论是否经过修改）时，您必须遵循同样的协议并免费提供一份源代码的副本。 附加条款：未经作者明确同意，您不得将使用此插件转换得到的任何工程文件用于商业用途。 本声明与 GPL-3.0 产生冲突时（附加条款除外），以 GPL-3.0 为准；在不同语言的翻译版本间，以简体中文版本为准。 This open-source plug-in is licensed under the GNU General Public License v3.0 (hereinafter referred to as GPL-3.0). This means that you may not use the source code or binary files of this plug-in for closed-source commercial software development; when redistributing the source code or binary files (whether modified or not), you must follow the same agreement and provide a copy of the source code, free of charge. Additional terms: without the explicit consent of the author, you may not use any project files converted by this plug-in for commercial purposes. In case of conflict between this statement and the GPL-3.0 (except for the additional terms), the GPL-3.0 shall prevail; among all translated versions in different languages, the simplified Chinese version shall prevail. 下载链接 阅读并同意以上条款内容后，请点击此处下载本插件。 [!NOTE] 请注意，此插件作为输入端（即将 .acep 文件转换为其他格式）时，暂不支持转换伴奏偏移。 更新日志 v0.8.3 (2022.07.28) 修复了参数合并叠加后数值异常的 bug v0.8.2 (2022.07.27) 实参标准化选项全新改版，支持更多自定义维度，请仔细查看说明 v0.8.1 (2022.07.27) 修复了力度实参无法被导入的 bug 修复了张力实参导入时缩放比例异常的 bug v0.8.0 (2022.07.26) 支持将气声、张力、力度实参进行 Min-Max 标准化后作为相对值导入，并提供选项控制动态比例 请注意：实参与相对值（包络）的概念是不同的，转换时请仔细阅读对应的选项说明，并谨慎调整选项值，否则可能造成十分极端的效果。 v0.7.1 (2022.07.24) 修复了当音符靠近第一小节开头时可能转换失败的 bug v0.7.0 (2022.07.22) 支持导入气声、张力、力度、共振峰参数 新增三个选项控制张力与力度的导入模式 修复了不同段音高曲线之间没有被正确切断的 bug v0.6.1 (2022.07.21) 添加 “保留全部发音信息” 选项，用于控制是否保留 .acep 文件中冗余的发音信息 修复少数情况下文件解码失败的 bug v0.6.0 (2022.07.21) 支持作为输入端（但暂不支持转换伴奏偏移和除音高外的其他参数） 由于 ACE Studio 已修复相关 bug，因此移除了 “转换伴奏信息” 的输出选项 v0.5.0 (2022.07.12) 添加许可证信息并正式公开 开源声明 本插件使用和参考了以下第三方开源项目： 开源项目 许可证 相关链接 acep_decrypt MIT License https://github.com/SoulMelody/acep_decrypt Newtonsoft.Json MIT License https://www.newtonsoft.com/json NAudio MIT License https://github.com/naudio/NAudio LinqStatistics Apache License 2.0 https://github.com/dkackman/LinqStatistics 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-08-01 02:01:26 "},"market/plugin-srt.html":{"url":"market/plugin-srt.html","title":"SRT 字幕文件","keywords":"","body":"SRT 字幕转换插件 适用格式：SRT 字幕文件 (*.lrc) 版本：0.0.1 最后更新日期：2022.07.22 作者：笛鹿FlutyDeer 简介 本插件支持从其他格式导出 SRT 字幕文件，提供丰富的输出选项。本插件无法作为输入端，即无法将 SRT 字幕文件转换为其他格式。 高级选项 输出选项 偏移量 单位为毫秒，正值表示整体提前，负值相反。 歌词换行方式 此选项支持的值如下： 音符间隙和标点符号：两个相邻的音符间距大于等于32分音符或遇到标点符号时另起新行。 仅音符间隙：两个相邻的音符间距大于等于32分音符时另起新行。 仅标点符号：遇到标点符号时另起新行。 写入时间轴 如果需要无时间轴的歌词，关闭此选项即可。 歌词文本编码 此选项支持的值如下： ASCII BigEndianUnicode Default Unicode UTF-32 UTF-7 UTF-8 BOM UTF-8 更新日志 v0.0.1 (2022.07.22) 首次发布 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-07-22 22:31:41 "},"downloads.html":{"url":"downloads.html","title":"下载中心","keywords":"","body":"下载中心 下载使用前，建议您阅读本项目的开源声明。 OpenSVIP 转换器 最新版本 v1.4.1：下载链接 备用版本 v1.3.0：下载链接 注意：仅支持 Windows 7 及以上操作系统（需要 .NET Framework 4.7.2，Windows 10+ 通常已自带） 使用方法：解压并运行 OpenSvip.GUI.exe OpenSVIP 插件 标识符 适用格式 作者 版本 最后更新日期 下载链接 ace ACE Studio 工程文件 (*.acep) YQ之神 0.8.3 2022.07.28 查看许可证 gj 歌叽歌叽工程文件 (*.gj) 笛鹿FlutyDeer 1.7.3 2022.07.21 下载链接 json OpenSVIP Model 文件 (*.json) YQ之神 1.0.0 2022.04.22 下载链接 lrc LRC 歌词文件 (*.lrc) 笛鹿FlutyDeer 0.0.1 2022.07.05 下载链接 midi MIDI 文件 (*.mid) 笛鹿FlutyDeer 0.8.2 2022.08.03 下载链接 srt SRT 字幕文件 (*.srt) 笛鹿FlutyDeer 0.0.1 2022.07.22 下载链接 svip X Studio 工程文件 (*.svip) YQ之神 1.1.6 2022.05.30 下载链接 svp Synthesizer V 工程文件 (*.svp) YQ之神 1.8.4 2022.07.25 下载链接 ustx OpenUTAU工程文件 (*.ustx) Oxygen Dioxide 0.0.2 2022.07.21 下载链接 vog Project Vogen 工程文件 (*.vog) 笛鹿FlutyDeer 0.4.0 2022.06.19 下载链接 y77 元七七工程文件 (*.y77) 笛鹿FlutyDeer 1.0.0 2022.05.04 下载链接 安装方式：在转换器菜单栏中点击“转换>安装插件”，选择相应的插件压缩包，随后根据指引操作。（请勿直接解压插件压缩包！） [!NOTE] 此处仅提供各插件的最新版本下载。如果在转换过程中出现错误或下载速度慢，请尝试访问版本仓库，该处可下载所有插件的最新以及历史版本。 若转换时发生错误，将对应的插件回退至上一个版本可能可以暂时解决问题。同时，建议使用上面的联系方式向插件作者反馈情况，以便及时修复。要查看各个版本的更新日志，请参阅插件市场分栏下对应插件的说明文档。 下载数据统计 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-08-03 21:01:29 "},"license.html":{"url":"license.html","title":"开源声明","keywords":"","body":"开源声明 本项目（OpenSVIP 歌声合成工程文件转换器）基于 MIT License 进行开源，下载使用即代表您知悉该许可证赋予您的权利，并同意许可证中的所有条款。 源码地址：https://github.com/yqzhishen/opensvip 在构建过程中，本项目使用了以下第三方开源项目： 开源项目 许可证 相关链接 Newtonsoft.Json MIT License https://www.newtonsoft.com/json ToolGood.Words.Pinyin MIT License https://github.com/toolgood/ToolGood.Words.Pinyin Samboy063.Tomlet MIT License https://github.com/SamboyCoding/Tomlet WindowsAPICodePack-Core 查看许可证 https://github.com/aybe/Windows-API-Code-Pack-1.1 MaterialDesignThemes MIT License https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit Panuon.UI.Silver Apache License 2.0 https://github.com/PanuonGroup/Panuon.WPF.UI CommandLineParser MIT License https://github.com/commandlineparser/commandline NullLib.ConsoleTable 未知 https://www.nuget.org/packages/NullLib.ConsoleTable 部分插件可能使用了其他的第三方开源项目（未在此列出）。 通知/反馈/交流QQ群：687772360 | Copyright © Team OpenVPI 2022 all right reserved，powered by Gitbook该文件修订时间： 2022-07-12 01:01:39 "}}